// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleHire.Models;

#nullable disable

namespace SimpleHire.Migrations
{
    [DbContext(typeof(InfoContext))]
    [Migration("20230429184709_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SimpleHire.Models.Info", b =>
                {
                    b.Property<int>("InfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InfoId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("YearExp")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("InfoId");

                    b.HasIndex("JobId");

                    b.ToTable("Information");

                    b.HasData(
                        new
                        {
                            InfoId = 1,
                            Email = "ZanaSilivani@gmail.com",
                            JobId = "Dev",
                            Major = "Information System",
                            Name = "Zana Silivani",
                            Phone = "615-693-7766",
                            YearExp = 5
                        },
                        new
                        {
                            InfoId = 2,
                            Email = "KarenSmith@gmail.com",
                            JobId = "Nur",
                            Major = "Nursing",
                            Name = "Karen Smith",
                            Phone = "615-693-7766",
                            YearExp = 10
                        },
                        new
                        {
                            InfoId = 3,
                            Email = "OsemaFalah@gmail.com",
                            JobId = "Mar",
                            Major = "Information System",
                            Name = "Osema Falah",
                            Phone = "615-693-7766",
                            YearExp = 5
                        });
                });

            modelBuilder.Entity("SimpleHire.Models.Job", b =>
                {
                    b.Property<string>("JobId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JobId");

                    b.ToTable("Jobs");

                    b.HasData(
                        new
                        {
                            JobId = "Dev",
                            Name = "Software developers"
                        },
                        new
                        {
                            JobId = "Law",
                            Name = "Lawyer"
                        },
                        new
                        {
                            JobId = "Nur",
                            Name = "Nurse"
                        },
                        new
                        {
                            JobId = "Mar",
                            Name = "Marketing"
                        },
                        new
                        {
                            JobId = "Mec",
                            Name = "Mechanic"
                        },
                        new
                        {
                            JobId = "Ele",
                            Name = "Electrician"
                        },
                        new
                        {
                            JobId = "Eng",
                            Name = "Engineering"
                        },
                        new
                        {
                            JobId = "Tec",
                            Name = "Teacher"
                        });
                });

            modelBuilder.Entity("SimpleHire.Models.Info", b =>
                {
                    b.HasOne("SimpleHire.Models.Job", "Job")
                        .WithMany()
                        .HasForeignKey("JobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });
#pragma warning restore 612, 618
        }
    }
}
